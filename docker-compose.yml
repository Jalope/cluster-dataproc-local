version: '3.8'
services:
  # ───────── ZOOKEEPER ─────────
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  # ───────── KAFKA ─────────
  kafka:
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    ports:
      - "9093:9092"

  # ───────── HDFS NAME NODE ─────────
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    container_name: namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - ./hadoop/name:/hadoop/dfs/name
    ports:
      - "9000:9000"   # HDFS RPC
      - "9870:9870"   # NameNode UI
    entrypoint: ["/entrypoint.sh"]
    command: ["hdfs", "namenode"]

  # ───────── HDFS DATA NODE 0 ─────────
  datanode-0:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    container_name: datanode-0
    depends_on:
      - namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - ./hadoop/data0:/hadoop/dfs/data
    entrypoint: ["/entrypoint.sh"]
    command: ["hdfs", "datanode"]

  # ───────── HDFS DATA NODE 1 ─────────
  datanode-1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    container_name: datanode-1
    depends_on:
      - namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - ./hadoop/data1:/hadoop/dfs/data
    entrypoint: ["/entrypoint.sh"]
    command: ["hdfs", "datanode"]

  # ───────── YARN RESOURCE MANAGER ─────────
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop2.7.4-java8
    container_name: resourcemanager
    depends_on:
      - namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
    ports:
      - "8088:8088"   # ResourceManager UI
    entrypoint: ["/entrypoint.sh"]
    command: ["yarn", "resourcemanager"]

  # ───────── YARN NODE MANAGER 0 ─────────
  nodemanager-0:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop2.7.4-java8
    container_name: nodemanager-0
    depends_on:
      - resourcemanager
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
    entrypoint: ["/entrypoint.sh"]
    command: ["yarn", "nodemanager"]

  # ───────── YARN NODE MANAGER 1 ─────────
  nodemanager-1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop2.7.4-java8
    container_name: nodemanager-1
    depends_on:
      - resourcemanager
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
    entrypoint: ["/entrypoint.sh"]
    command: ["yarn", "nodemanager"]

  # ───────── SPARK MASTER ─────────
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    depends_on:
      - namenode
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_HADOOP_FS_DEFAULTFS=hdfs://namenode:9000
    ports:
      - "7077:7077"   # Spark Master endpoint
      - "8080:8080"   # Spark Master UI

  # ───────── SPARK WORKER ─────────
  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077

  # ───────── JUPYTERLAB ─────────
  jupyter:
    image: jupyter/pyspark-notebook:latest
    container_name: jupyter
    depends_on:
      - spark-master
    volumes:
      - ./notebooks:/home/jovyan/work
    ports:
      - "8888:8888"
    command: >
      start-notebook.sh --NotebookApp.token=''

networks:
  default:
    driver: bridge